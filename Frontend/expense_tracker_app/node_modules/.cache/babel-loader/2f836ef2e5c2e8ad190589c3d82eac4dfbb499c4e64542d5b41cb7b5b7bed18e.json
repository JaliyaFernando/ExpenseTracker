{"ast":null,"code":"var _jsxFileName = \"/Users/alokalimark/Documents/IIT/ExpenseTracker/Frontend/expense_tracker_app/src/app/components/Reports.js\";\nimport React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport APIs from \"../constants/APIs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Reports extends Component {\n  // constructor(props) {\n  //     super(props);\n  //     this.getUserDetails = this.getUserDetails.bind(this);\n  //     this.onGenerate = this.onGenerate.bind(this);\n  //     this.onViwe = this.onViwe.bind(this);\n  //     this.state = {\n  //         userDetails: [],\n  //         userXMLReport: [],\n  //         userReport: [],\n  //         reportAvailable: false,\n  //         message: '',\n  //         viewReport: false\n  //     }\n  //     this.getUserDetails();\n  // }\n  // getUserDetails(){\n  //     axios.get(APIs.USER_BASE_URL+APIs.user.MY_DETAILS+this.state.user.UserID)\n  //         .then(\n  //             (response) => {\n  //                 if(response.data){\n\n  //                     console.log(\"user:\", this.state.userDetails.length);\n  //                     this.setState(\n  //                         {\n  //                             userDetails: response.data\n  //                         },\n  //                         () => {\n  //                             // Callback function after state is updated\n  //                             console.log(\"user:\", this.state.userDetails);\n  //                         })\n  //                 }\n  //             },\n  //             (error) => {\n  //                 console.log(error);\n  //             }\n  //         );\n  // }\n\n  // onGenerate(e) {\n  //     const obj = {\n  //         UserID: this.state.user.UserID,\n  //         UserName: this.state.userDetails.userName,\n  //         Age: this.state.userDetails.age,\n  //         Weight: this.state.userDetails.weight,\n  //         Height: this.state.userDetails.height,\n  //         Password: \"null\",\n  //         LastUpdate: \"2023-08-02T17:03:01.888Z\",\n  //     };\n  //     axios.post(APIs.REPORT_BASE_URL + APIs.report.GENERATE, obj)\n  //         .then(res => {\n  //                 this.setState({\n  //                     message: 'Report generated successfully'\n  //                 });\n  //             }\n  //         );\n  // }\n\n  onViwe(e) {\n    axios.get(APIs.SUMMARY_BASE_URL).then(response => {\n      console.log(response);\n      //   const parser = new DOMParser();\n\n      //   // Parse the XML string\n      //   const xmlDoc = parser.parseFromString(response.data, \"text/xml\");\n\n      //   // Access the elements and their text values\n      //   const userElement = xmlDoc.querySelector(\"User\");\n\n      //   const name = userElement.querySelector(\"Name\").textContent;\n      //   const age = parseInt(userElement.querySelector(\"Age\").textContent);\n      //   const weight = parseFloat(userElement.querySelector(\"Weight\").textContent);\n      //   const height = parseFloat(userElement.querySelector(\"Height\").textContent);\n      //   const bmi = parseFloat(userElement.querySelector(\"BMI\").textContent);\n\n      //   const obj = {\n      //       UserName: name,\n      //       Age: age,\n      //       Weight: weight,\n      //       Height: height,\n      //       BMI:bmi,\n      //   };\n\n      //   if(response.data){\n      //       this.setState(\n      //           {\n      //               userXMLReport: response.data,\n      //               userReport: obj,\n      //               viewReport: true\n      //           },\n      //           () => {\n      //               // Callback function after state is updated\n      //               console.log(\"userReport:\", this.state.userReport);\n      //           })\n      //   }\n    }, error => {\n      console.log(error);\n      this.setState({\n        message: \"Report not found\"\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my_workout\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          width: \"400px\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            align: \"left\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Generate Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  onClick: this.onGenerate,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Generate Report\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  onClick: () => {\n                    console.log('hi');\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"View Report\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","Button","axios","APIs","jsxDEV","_jsxDEV","Reports","onViwe","e","get","SUMMARY_BASE_URL","then","response","console","log","error","setState","message","render","align","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","variant","type","onClick","onGenerate"],"sources":["/Users/alokalimark/Documents/IIT/ExpenseTracker/Frontend/expense_tracker_app/src/app/components/Reports.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport APIs from \"../constants/APIs\";\n\nexport default class Reports extends Component {\n  // constructor(props) {\n  //     super(props);\n  //     this.getUserDetails = this.getUserDetails.bind(this);\n  //     this.onGenerate = this.onGenerate.bind(this);\n  //     this.onViwe = this.onViwe.bind(this);\n  //     this.state = {\n  //         userDetails: [],\n  //         userXMLReport: [],\n  //         userReport: [],\n  //         reportAvailable: false,\n  //         message: '',\n  //         viewReport: false\n  //     }\n  //     this.getUserDetails();\n  // }\n  // getUserDetails(){\n  //     axios.get(APIs.USER_BASE_URL+APIs.user.MY_DETAILS+this.state.user.UserID)\n  //         .then(\n  //             (response) => {\n  //                 if(response.data){\n\n  //                     console.log(\"user:\", this.state.userDetails.length);\n  //                     this.setState(\n  //                         {\n  //                             userDetails: response.data\n  //                         },\n  //                         () => {\n  //                             // Callback function after state is updated\n  //                             console.log(\"user:\", this.state.userDetails);\n  //                         })\n  //                 }\n  //             },\n  //             (error) => {\n  //                 console.log(error);\n  //             }\n  //         );\n  // }\n\n  // onGenerate(e) {\n  //     const obj = {\n  //         UserID: this.state.user.UserID,\n  //         UserName: this.state.userDetails.userName,\n  //         Age: this.state.userDetails.age,\n  //         Weight: this.state.userDetails.weight,\n  //         Height: this.state.userDetails.height,\n  //         Password: \"null\",\n  //         LastUpdate: \"2023-08-02T17:03:01.888Z\",\n  //     };\n  //     axios.post(APIs.REPORT_BASE_URL + APIs.report.GENERATE, obj)\n  //         .then(res => {\n  //                 this.setState({\n  //                     message: 'Report generated successfully'\n  //                 });\n  //             }\n  //         );\n  // }\n\n  onViwe(e) {\n    axios.get(APIs.SUMMARY_BASE_URL).then(\n      (response) => {\n        console.log(response);\n        //   const parser = new DOMParser();\n\n        //   // Parse the XML string\n        //   const xmlDoc = parser.parseFromString(response.data, \"text/xml\");\n\n        //   // Access the elements and their text values\n        //   const userElement = xmlDoc.querySelector(\"User\");\n\n        //   const name = userElement.querySelector(\"Name\").textContent;\n        //   const age = parseInt(userElement.querySelector(\"Age\").textContent);\n        //   const weight = parseFloat(userElement.querySelector(\"Weight\").textContent);\n        //   const height = parseFloat(userElement.querySelector(\"Height\").textContent);\n        //   const bmi = parseFloat(userElement.querySelector(\"BMI\").textContent);\n\n        //   const obj = {\n        //       UserName: name,\n        //       Age: age,\n        //       Weight: weight,\n        //       Height: height,\n        //       BMI:bmi,\n        //   };\n\n        //   if(response.data){\n        //       this.setState(\n        //           {\n        //               userXMLReport: response.data,\n        //               userReport: obj,\n        //               viewReport: true\n        //           },\n        //           () => {\n        //               // Callback function after state is updated\n        //               console.log(\"userReport:\", this.state.userReport);\n        //           })\n        //   }\n      },\n      (error) => {\n        console.log(error);\n        this.setState({\n          message: \"Report not found\",\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div align=\"center\">\n        <h2>Reports</h2>\n        <div className=\"my_workout\">\n          <table width=\"400px\">\n            <tbody align=\"left\">\n              <tr>\n                <td>Generate Report</td>\n                <td>\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    onClick={this.onGenerate}\n                  >\n                    <span>Generate Report</span>\n                  </Button>\n                </td>\n                <td>\n                  <Button variant=\"primary\" type=\"submit\" onClick={()=>{console.log('hi')}}>\n                    <span>View Report</span>\n                  </Button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        {/* <div className=\"my_workout\">\n                    {\n                        (this.state.message) ? (\n                            <h5 align=\"center\" className=\"alert-warning\"><i className=\"fa fa-warning\"> {this.state.message}</i> </h5>\n                        ) : null\n                    }\n                    <table width=\"400px\">\n                        <tbody align=\"left\">\n                        <tr>\n                            <td>Generate Report</td>\n                            <td>\n                                <Button variant=\"primary\" type=\"submit\"  onClick={this.onGenerate}>\n                                    <span>Generate Report</span>\n                                </Button>\n                            </td>\n                            <td>\n                                <Button variant=\"primary\" type=\"submit\" onClick={this.onViwe}>\n                                    <span>View Report</span>\n                                </Button>\n                            </td>\n                        </tr>\n                        </tbody>\n                    </table>\n\n                    {\n                        (this.state.viewReport) ? (\n                            <div>\n                                <h3>My Report</h3>\n                                <table width=\"400px\">\n                                    <tbody align=\"left\">\n                                    <tr>\n                                        <td>User Name</td>\n                                        <td>{this.state.userReport.UserName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Age</td>\n                                        <td>{this.state.userReport.Age}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Weight(kg)</td>\n                                        <td>{this.state.userReport.Weight}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Height(m)</td>\n                                        <td>{this.state.userReport.Height}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>BMI</td>\n                                        <td>{this.state.userReport.BMI}</td>\n                                    </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) : null\n                    }\n                </div> */}\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}